name: k3s-router

on: [push]

env:
  REGISTRY: ghcr.io
  LOCAL_REGISTRY: registry.localhost:5000

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: turing-e2e
      ISTIO_VERSION: 1.9.9
      KNATIVE_VERSION: 0.18.3
      KNATIVE_ISTIO_VERSION: 0.18.1
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: "Setup local k8s cluster"
        id: single-cluster
        uses: AbsaOSS/k3d-action@v1.5.0
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          args: >-
            --servers 1
            --agents 3
            --port 80:80@loadbalancer
            --k3s-server-arg "--no-deploy=traefik,metrics-server"

      - name: "Install Istio"
        working-directory: .github/workflows-resources
        run: |
          curl -L https://istio.io/downloadIstio | sh -
          export PATH=$PWD/istio-${{ env.ISTIO_VERSION }}/bin:$PATH
          echo "y" | istioctl install -f istio-minimal-operator.yaml

      - name: "Install Knative with Istio Controller"
        run: |
          kubectl apply \
            -f https://github.com/knative/serving/releases/download/v${{ env.KNATIVE_VERSION }}/serving-crds.yaml
          kubectl apply \
            -f https://github.com/knative/serving/releases/download/v${{ env.KNATIVE_VERSION }}/serving-core.yaml

          kubectl apply \
            -f https://github.com/knative/net-istio/releases/download/v${{ env.KNATIVE_ISTIO_VERSION }}/net-istio.yaml

          kubectl -n knative-serving patch configmap/config-domain \
            --type merge -p '{"data":{"127.0.0.1.nip.io":""}}'

          kubectl -n knative-serving patch configmap/config-deployment \
            --type merge -p '{"data":{"registriesSkippingTagResolving": "${{ env.LOCAL_REGISTRY }}"}}'



      - name: "Deploy mockserver"
        working-directory: .github/workflows-resources
        run: |
          kubectl apply \
            -f turing.mockserver.yaml
          kubectl apply \
            -f mockserver.ingress.yaml

      - uses: azure/setup-helm@v1
        with:
          version: 2.16.7

      - name: "Deploy Router"
        run: |
          helm init --stable-repo-url=https://charts.helm.sh/stable --client-only
          helm install turing-router ./charts/turing-router-load-test \
            --set turing.router.image.tag=0.0.0-build.1-e8ee033 \
            --set turing.router.image.registry=ghcr.io/romanwozniak/turing/ \
            --set turing.router.minReplica=3 \
            --set turing.router.maxReplica=3 \
            --set turing.enricher.enabled=true \
            --set turing.enricher.repository=kennethreitz/httpbin \
            --set turing.enricher.tag=latest \
            --set turing.enricher.minReplica=3 \
            --set turing.enricher.maxReplica=3 \
            --set turing.ensembler.enabled=true \
            --set turing.ensembler.repository=kennethreitz/httpbin \
            --set turing.ensembler.tag=latest \
            --set turing.ensembler.minReplica=3 \
            --set turing.ensembler.maxReplica=3 \
            --set turing.logging.level=INFO \
            --set control.image.repository=kennethreitz/httpbin \
            --set control.image.tag=latest \
            --set modelA.image.repository=kennethreitz/httpbin \
            --set modelA.image.tag=latest \
            --set control.replicaCount=3 \
            --set modelA.replicaCount=3

      - uses: jupyterhub/action-k8s-await-workloads@v1
        with:
          timeout: 300 #seconds
          max-restarts: -1
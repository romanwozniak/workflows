name: k3s

on: [push]

env:
  REGISTRY: ghcr.io
  TURING_VERSION: 0.0.0-build.1-164b88c

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup k3s cluster
        uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: v1.21.2-k3s1

      - run: |
          kubectl get nodes

      - name: Log in to the GH Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}

      - run: |
          docker pull ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-api:${{ env.TURING_VERSION }}
          docker pull ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-router:${{ env.TURING_VERSION }}

          docker tag \
            ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-api:${{ env.TURING_VERSION }} \
            localhost:5000/turing/turing-api:${{ env.TURING_VERSION }}

          docker tag \
            ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-router:${{ env.TURING_VERSION }} \
            localhost:5000/turing/turing-router:${{ env.TURING_VERSION }}

          docker push localhost:5000/turing/turing-api:${{ env.TURING_VERSION }}
          docker push localhost:5000/turing/turing-router:${{ env.TURING_VERSION }}

      - uses: azure/setup-helm@v1
        with:
#          version: 'v2.17.0'

      - run: |
          helm version

      - uses: actions/checkout@v2
        with:
          repository: gojek/mlp
          token: ${{ secrets.GH_PAT }}
          path: mlp

      - run: |
          helm install mlp ./mlp/chart -f mlp.helm-values.yaml --wait



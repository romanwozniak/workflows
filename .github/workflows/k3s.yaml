name: k3s

on: [push]

env:
  REGISTRY: ghcr.io
  TURING_VERSION: 0.0.0-build.1-164b88c
  MLP_VERSION: v1.4.14

jobs:
  e2e:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup k3s cluster
        uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: v1.21.2-k3s1

      - name: Log in to the GH Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}

      - run: |
          docker pull ${{ env.REGISTRY }}/gojek/mlp:${{ env.MLP_VERSION }}
          docker tag \
            ${{ env.REGISTRY }}/gojek/mlp:${{ env.MLP_VERSION }} \
            localhost:5000/mlp:${{ env.MLP_VERSION }}

          docker push localhost:5000/mlp:${{ env.MLP_VERSION }}
#          docker pull ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-router:${{ env.TURING_VERSION }}
#
#          docker tag \
#            ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-api:${{ env.TURING_VERSION }} \
#            localhost:5000/turing/turing-api:${{ env.TURING_VERSION }}
#
#          docker tag \
#            ${{ env.REGISTRY }}/${{ github.actor }}/turing/turing-router:${{ env.TURING_VERSION }} \
#            localhost:5000/turing/turing-router:${{ env.TURING_VERSION }}
#
#          docker push localhost:5000/turing/turing-api:${{ env.TURING_VERSION }}
#          docker push localhost:5000/turing/turing-router:${{ env.TURING_VERSION }}

#      - uses: azure/setup-helm@v1
#        with:
#          version: 'v2.17.0'

      - uses: actions/checkout@v2
        with:
          repository: gojek/mlp
          ref: ${{ env.MLP_VERSION }}
          token: ${{ secrets.GH_PAT }}
          path: mlp

      - run: |
          helm install mlp ./mlp/charts/mlp \
            --set mlp.image.registry=localhost:5000 \
            --set mlp.image.repository=mlp \
            --set mlp.image.tag=${{ env.MLP_VERSION }} \
            --values mlp.helm-values.yaml

      - uses: jupyterhub/action-k8s-await-workloads@v1
        with:
          workloads: "svc/mlp"

      - run: |
          kubectl get services
          kubectl get pods

      - uses: RichiCoder1/kube-forward-action@v0.1.4
        with:
          kubeconfig: ${{ env.KUBECONFIG }}
          targetRef: svc/mlp
          targetPort: 8080
          port: 8081

      - run: |
          curl -v localhost:8081/v1/projects




